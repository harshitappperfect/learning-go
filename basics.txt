The use of **type inference** in Go might seem like it could lead to dynamic typing, but it doesn't change the fact that Go is **statistically typed**. Let's clarify this further:

### Type Inference vs. Dynamic Typing

1. **Type Inference**: When you use type inference in Go, the **compiler** determines the type of the variable at **compile-time**, not at runtime. Even though you don't explicitly specify the type, the Go compiler can still figure out what type the variable should have based on the value assigned to it. 

   For example:
   ```go
   x := 10  // Inferred as int
   ```
   In this case, `x` is inferred to be of type `int`, and this type is determined **during compilation**. The compiler knows the type before the program is run, and it enforces type correctness at compile time.

2. **Dynamic Typing**: In dynamically typed languages (like Python or JavaScript), the type of a variable is determined at **runtime**, and the type can change during the execution of the program. This is not the case in Go. Even when you use type inference, the type is **fixed** at compile time and cannot be changed during runtime.

   For example, in Python:
   ```python
   x = 10  # x is an integer
   x = "Hello"  # x is now a string
   ```
   Here, `x` can change types dynamically at runtime, which is characteristic of dynamic typing.

### Why Go is Still Statically Typed

In Go, even with type inference:
- The type of the variable is **known at compile time**, and it cannot change during runtime.
- Type mismatches are caught at **compile time**, preventing runtime errors related to incorrect types.
- Go does not allow you to assign a variable of one type to a variable of another type without an explicit conversion, even if they are inferred types.

### Key Takeaway

Type inference in Go makes the language more concise and easier to write, but it does **not** change the fundamental nature of Go being statically typed. The type of variables is still determined at compile time, not at runtime, so Go is considered a **statically typed language**, not a dynamically typed one.



Diff between print and println